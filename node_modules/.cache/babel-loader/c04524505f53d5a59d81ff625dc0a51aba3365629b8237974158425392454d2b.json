{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  categoryId: 0,\n  searchValue: '',\n  currentPage: 1,\n  pagesCount: 3,\n  sort: {\n    name: 'Популярности',\n    sortProperty: '-rating'\n  }\n};\nconst filterSlice = createSlice({\n  name: 'filters',\n  initialState,\n  reducers: {\n    setCategoryId(state, action) {\n      state.categoryId = action.payload;\n    },\n    setSearchValue(state, action) {\n      state.searchValue = action.payload;\n    },\n    setSortType(state, action) {\n      state.sort = action.payload;\n    },\n    setCurrentPage(state, action) {\n      state.currentPage = action.payload;\n    },\n    setPagesCount(state, action) {\n      state.pagesCount = action.payload;\n    },\n    setFilters(state, action) {\n      state.currentPage = action.payload.currentPage;\n      state.categoryId = action.payload.categoryId;\n    }\n  }\n});\nexport const {\n  setCategoryId,\n  setSortType,\n  setCurrentPage,\n  setPagesCount,\n  setFilters,\n  setSearchValue\n} = filterSlice.actions;\nexport default filterSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","categoryId","searchValue","currentPage","pagesCount","sort","name","sortProperty","filterSlice","reducers","setCategoryId","state","action","payload","setSearchValue","setSortType","setCurrentPage","setPagesCount","setFilters","actions","reducer"],"sources":["/home/splee/Документы/react-pizza/src/redux/filter/slice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { FilterSliceState, ISort, SearchPizzaParams } from \"./types\";\n\nconst initialState: FilterSliceState = {\n  categoryId: 0,\n  searchValue: '',\n  currentPage: 1,\n  pagesCount: 3,\n  sort: {\n    name: 'Популярности',\n    sortProperty: '-rating'\n  }\n}\n\nconst filterSlice = createSlice({\n  name: 'filters',\n  initialState,\n  reducers: {\n    setCategoryId(state, action: PayloadAction<number>) {\n      state.categoryId = action.payload\n    },\n    setSearchValue(state, action: PayloadAction<string>) {\n      state.searchValue = action.payload\n    },\n    setSortType(state, action: PayloadAction<ISort>) {\n      state.sort = action.payload\n    },\n    setCurrentPage(state, action: PayloadAction<number>) {\n      state.currentPage = action.payload\n    },\n    setPagesCount(state, action: PayloadAction<number>) {\n      state.pagesCount = action.payload\n    },\n    setFilters(state, action: PayloadAction<SearchPizzaParams>) {\n      state.currentPage = action.payload.currentPage;\n      state.categoryId = action.payload.categoryId;\n    }\n  }\n})\n\nexport const { setCategoryId, setSortType, setCurrentPage, setPagesCount, setFilters, setSearchValue } = filterSlice.actions\n\nexport default filterSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAG7D,MAAMC,YAA8B,GAAG;EACrCC,UAAU,EAAE,CAAC;EACbC,WAAW,EAAE,EAAE;EACfC,WAAW,EAAE,CAAC;EACdC,UAAU,EAAE,CAAC;EACbC,IAAI,EAAE;IACJC,IAAI,EAAE,cAAc;IACpBC,YAAY,EAAE;EAChB;AACF,CAAC;AAED,MAAMC,WAAW,GAAGT,WAAW,CAAC;EAC9BO,IAAI,EAAE,SAAS;EACfN,YAAY;EACZS,QAAQ,EAAE;IACRC,aAAaA,CAACC,KAAK,EAAEC,MAA6B,EAAE;MAClDD,KAAK,CAACV,UAAU,GAAGW,MAAM,CAACC,OAAO;IACnC,CAAC;IACDC,cAAcA,CAACH,KAAK,EAAEC,MAA6B,EAAE;MACnDD,KAAK,CAACT,WAAW,GAAGU,MAAM,CAACC,OAAO;IACpC,CAAC;IACDE,WAAWA,CAACJ,KAAK,EAAEC,MAA4B,EAAE;MAC/CD,KAAK,CAACN,IAAI,GAAGO,MAAM,CAACC,OAAO;IAC7B,CAAC;IACDG,cAAcA,CAACL,KAAK,EAAEC,MAA6B,EAAE;MACnDD,KAAK,CAACR,WAAW,GAAGS,MAAM,CAACC,OAAO;IACpC,CAAC;IACDI,aAAaA,CAACN,KAAK,EAAEC,MAA6B,EAAE;MAClDD,KAAK,CAACP,UAAU,GAAGQ,MAAM,CAACC,OAAO;IACnC,CAAC;IACDK,UAAUA,CAACP,KAAK,EAAEC,MAAwC,EAAE;MAC1DD,KAAK,CAACR,WAAW,GAAGS,MAAM,CAACC,OAAO,CAACV,WAAW;MAC9CQ,KAAK,CAACV,UAAU,GAAGW,MAAM,CAACC,OAAO,CAACZ,UAAU;IAC9C;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAES,aAAa;EAAEK,WAAW;EAAEC,cAAc;EAAEC,aAAa;EAAEC,UAAU;EAAEJ;AAAe,CAAC,GAAGN,WAAW,CAACW,OAAO;AAE5H,eAAeX,WAAW,CAACY,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}