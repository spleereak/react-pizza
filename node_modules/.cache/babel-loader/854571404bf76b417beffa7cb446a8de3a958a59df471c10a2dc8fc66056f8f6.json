{"ast":null,"code":"import _wrapAsyncGenerator from \"/home/splee/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/react-pizza/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport _awaitAsyncGenerator from \"/home/splee/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/react-pizza/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _asyncGeneratorDelegate from \"/home/splee/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/react-pizza/node_modules/@babel/runtime/helpers/esm/asyncGeneratorDelegate.js\";\nimport _asyncIterator from \"/home/splee/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/react-pizza/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nexport const streamChunk = function* (chunk, chunkSize) {\n  let len = chunk.byteLength;\n  if (!chunkSize || len < chunkSize) {\n    yield chunk;\n    return;\n  }\n  let pos = 0;\n  let end;\n  while (pos < len) {\n    end = pos + chunkSize;\n    yield chunk.slice(pos, end);\n    pos = end;\n  }\n};\nexport const readBytes = /*#__PURE__*/function () {\n  var _ref = _wrapAsyncGenerator(function* (iterable, chunkSize, encode) {\n    var _iteratorAbruptCompletion = false;\n    var _didIteratorError = false;\n    var _iteratorError;\n    try {\n      for (var _iterator = _asyncIterator(iterable), _step; _iteratorAbruptCompletion = !(_step = yield _awaitAsyncGenerator(_iterator.next())).done; _iteratorAbruptCompletion = false) {\n        const chunk = _step.value;\n        {\n          yield* _asyncGeneratorDelegate(_asyncIterator(streamChunk(ArrayBuffer.isView(chunk) ? chunk : yield _awaitAsyncGenerator(encode(String(chunk))), chunkSize)), _awaitAsyncGenerator);\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (_iteratorAbruptCompletion && _iterator.return != null) {\n          yield _awaitAsyncGenerator(_iterator.return());\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  });\n  return function readBytes(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport const trackStream = (stream, chunkSize, onProgress, onFinish, encode) => {\n  const iterator = readBytes(stream, chunkSize, encode);\n  let bytes = 0;\n  return new ReadableStream({\n    type: 'bytes',\n    async pull(controller) {\n      const {\n        done,\n        value\n      } = await iterator.next();\n      if (done) {\n        controller.close();\n        onFinish();\n        return;\n      }\n      let len = value.byteLength;\n      onProgress && onProgress(bytes += len);\n      controller.enqueue(new Uint8Array(value));\n    },\n    cancel(reason) {\n      onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  });\n};","map":{"version":3,"names":["streamChunk","chunk","chunkSize","len","byteLength","pos","end","slice","readBytes","_ref","_wrapAsyncGenerator","iterable","encode","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_asyncIterator","_step","_awaitAsyncGenerator","next","done","value","_asyncGeneratorDelegate","ArrayBuffer","isView","String","err","return","_x","_x2","_x3","apply","arguments","trackStream","stream","onProgress","onFinish","iterator","bytes","ReadableStream","type","pull","controller","close","enqueue","Uint8Array","cancel","reason","highWaterMark"],"sources":["/home/splee/Документы/node_modules/axios/lib/helpers/trackStream.js"],"sourcesContent":["\n\nexport const streamChunk = function* (chunk, chunkSize) {\n  let len = chunk.byteLength;\n\n  if (!chunkSize || len < chunkSize) {\n    yield chunk;\n    return;\n  }\n\n  let pos = 0;\n  let end;\n\n  while (pos < len) {\n    end = pos + chunkSize;\n    yield chunk.slice(pos, end);\n    pos = end;\n  }\n}\n\nexport const readBytes = async function* (iterable, chunkSize, encode) {\n  for await (const chunk of iterable) {\n    yield* streamChunk(ArrayBuffer.isView(chunk) ? chunk : (await encode(String(chunk))), chunkSize);\n  }\n}\n\nexport const trackStream = (stream, chunkSize, onProgress, onFinish, encode) => {\n  const iterator = readBytes(stream, chunkSize, encode);\n\n  let bytes = 0;\n\n  return new ReadableStream({\n    type: 'bytes',\n\n    async pull(controller) {\n      const {done, value} = await iterator.next();\n\n      if (done) {\n        controller.close();\n        onFinish();\n        return;\n      }\n\n      let len = value.byteLength;\n      onProgress && onProgress(bytes += len);\n      controller.enqueue(new Uint8Array(value));\n    },\n    cancel(reason) {\n      onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  })\n}\n"],"mappings":";;;;AAEA,OAAO,MAAMA,WAAW,GAAG,UAAAA,CAAWC,KAAK,EAAEC,SAAS,EAAE;EACtD,IAAIC,GAAG,GAAGF,KAAK,CAACG,UAAU;EAE1B,IAAI,CAACF,SAAS,IAAIC,GAAG,GAAGD,SAAS,EAAE;IACjC,MAAMD,KAAK;IACX;EACF;EAEA,IAAII,GAAG,GAAG,CAAC;EACX,IAAIC,GAAG;EAEP,OAAOD,GAAG,GAAGF,GAAG,EAAE;IAChBG,GAAG,GAAGD,GAAG,GAAGH,SAAS;IACrB,MAAMD,KAAK,CAACM,KAAK,CAACF,GAAG,EAAEC,GAAG,CAAC;IAC3BD,GAAG,GAAGC,GAAG;EACX;AACF,CAAC;AAED,OAAO,MAAME,SAAS;EAAA,IAAAC,IAAA,GAAAC,mBAAA,CAAG,WAAiBC,QAAQ,EAAET,SAAS,EAAEU,MAAM,EAAE;IAAA,IAAAC,yBAAA;IAAA,IAAAC,iBAAA;IAAA,IAAAC,cAAA;IAAA;MACrE,SAAAC,SAAA,GAAAC,cAAA,CAA0BN,QAAQ,GAAAO,KAAA,EAAAL,yBAAA,KAAAK,KAAA,SAAAC,oBAAA,CAAAH,SAAA,CAAAI,IAAA,KAAAC,IAAA,EAAAR,yBAAA,UAAE;QAAA,MAAnBZ,KAAK,GAAAiB,KAAA,CAAAI,KAAA;QAAA;UACpB,OAAAC,uBAAA,CAAAN,cAAA,CAAOjB,WAAW,CAACwB,WAAW,CAACC,MAAM,CAACxB,KAAK,CAAC,GAAGA,KAAK,SAAAkB,oBAAA,CAAUP,MAAM,CAACc,MAAM,CAACzB,KAAK,CAAC,CAAC,CAAC,EAAEC,SAAS,CAAC,GAAAiB,oBAAA;QAAC;MACnG;IAAC,SAAAQ,GAAA;MAAAb,iBAAA;MAAAC,cAAA,GAAAY,GAAA;IAAA;MAAA;QAAA,IAAAd,yBAAA,IAAAG,SAAA,CAAAY,MAAA;UAAA,MAAAT,oBAAA,CAAAH,SAAA,CAAAY,MAAA;QAAA;MAAA;QAAA,IAAAd,iBAAA;UAAA,MAAAC,cAAA;QAAA;MAAA;IAAA;EACH,CAAC;EAAA,gBAJYP,SAASA,CAAAqB,EAAA,EAAAC,GAAA,EAAAC,GAAA;IAAA,OAAAtB,IAAA,CAAAuB,KAAA,OAAAC,SAAA;EAAA;AAAA,GAIrB;AAED,OAAO,MAAMC,WAAW,GAAGA,CAACC,MAAM,EAAEjC,SAAS,EAAEkC,UAAU,EAAEC,QAAQ,EAAEzB,MAAM,KAAK;EAC9E,MAAM0B,QAAQ,GAAG9B,SAAS,CAAC2B,MAAM,EAAEjC,SAAS,EAAEU,MAAM,CAAC;EAErD,IAAI2B,KAAK,GAAG,CAAC;EAEb,OAAO,IAAIC,cAAc,CAAC;IACxBC,IAAI,EAAE,OAAO;IAEb,MAAMC,IAAIA,CAACC,UAAU,EAAE;MACrB,MAAM;QAACtB,IAAI;QAAEC;MAAK,CAAC,GAAG,MAAMgB,QAAQ,CAAClB,IAAI,CAAC,CAAC;MAE3C,IAAIC,IAAI,EAAE;QACRsB,UAAU,CAACC,KAAK,CAAC,CAAC;QAClBP,QAAQ,CAAC,CAAC;QACV;MACF;MAEA,IAAIlC,GAAG,GAAGmB,KAAK,CAAClB,UAAU;MAC1BgC,UAAU,IAAIA,UAAU,CAACG,KAAK,IAAIpC,GAAG,CAAC;MACtCwC,UAAU,CAACE,OAAO,CAAC,IAAIC,UAAU,CAACxB,KAAK,CAAC,CAAC;IAC3C,CAAC;IACDyB,MAAMA,CAACC,MAAM,EAAE;MACbX,QAAQ,CAACW,MAAM,CAAC;MAChB,OAAOV,QAAQ,CAACV,MAAM,CAAC,CAAC;IAC1B;EACF,CAAC,EAAE;IACDqB,aAAa,EAAE;EACjB,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}