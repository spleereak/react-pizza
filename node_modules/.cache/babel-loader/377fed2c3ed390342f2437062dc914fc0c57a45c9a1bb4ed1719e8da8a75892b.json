{"ast":null,"code":"import axios from 'axios';\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { setPagesCount } from '../filter/slice';\nimport { Status } from './types';\nexport const fetchPizza = createAsyncThunk('pizza/fetchPizzaStatus', async (params, thunkApi) => {\n  const {\n    sort,\n    categoryId,\n    currentPage\n  } = params;\n  const {\n    data\n  } = await axios.get(`https://d7d46da63dd6c2bd.mokky.dev/items?page=${currentPage}&limit=4${categoryId > 0 ? `&category=${categoryId}` : ''}&sortBy=${sort.sortProperty}`);\n  const dispatch = thunkApi.dispatch;\n  dispatch(setPagesCount(data.meta.total_pages));\n  return data.items;\n});\nconst initialState = {\n  items: [],\n  status: Status.LOADING\n};\nconst pizzaSlice = createSlice({\n  name: 'pizza',\n  initialState,\n  reducers: {\n    setItems(state, action) {\n      state.items = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchPizza.pending, state => {\n      state.status = Status.LOADING;\n      state.items = [];\n    }).addCase(fetchPizza.fulfilled, (state, action) => {\n      state.items = action.payload;\n      state.status = Status.SUCCESS;\n    }).addCase(fetchPizza.rejected, state => {\n      state.status = Status.ERROR;\n      state.items = [];\n    });\n  }\n});\nexport const selectPizzaData = state => state.pizza;\nexport const {\n  setItems\n} = pizzaSlice.actions;\nexport default pizzaSlice.reducer;","map":{"version":3,"names":["axios","createAsyncThunk","createSlice","setPagesCount","Status","fetchPizza","params","thunkApi","sort","categoryId","currentPage","data","get","sortProperty","dispatch","meta","total_pages","items","initialState","status","LOADING","pizzaSlice","name","reducers","setItems","state","action","payload","extraReducers","builder","addCase","pending","fulfilled","SUCCESS","rejected","ERROR","selectPizzaData","pizza","actions","reducer"],"sources":["/home/splee/Документы/react-pizza/src/redux/slices/pizza/slice.ts"],"sourcesContent":["import axios from 'axios'\nimport { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\"\nimport { setPagesCount } from '../filter/slice';\nimport { RootState } from '../../store';\nimport { FetchPizzaArgs, FetchPizzaRes, PizzaItem, PizzaSliceState, Status } from './types';\n\nexport const fetchPizza = createAsyncThunk<PizzaItem[], FetchPizzaArgs>('pizza/fetchPizzaStatus', async (params: FetchPizzaArgs, thunkApi) => {\n  const { sort, categoryId, currentPage } : FetchPizzaArgs = params;\n  const { data } = await axios.get<FetchPizzaRes>(`https://d7d46da63dd6c2bd.mokky.dev/items?page=${currentPage}&limit=4${categoryId > 0 ? `&category=${categoryId}` : ''}&sortBy=${sort.sortProperty}`)\n  const dispatch = thunkApi.dispatch\n  dispatch(setPagesCount(data.meta.total_pages))\n  return data.items;\n})\n\nconst initialState: PizzaSliceState = {\n  items: [],\n  status: Status.LOADING\n}\n\nconst pizzaSlice = createSlice({\n  name: 'pizza',\n  initialState,\n  reducers: {\n    setItems(state, action: PayloadAction<PizzaItem[]>) {\n      state.items = action.payload\n    }\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchPizza.pending, (state) => {\n        state.status = Status.LOADING\n        state.items = []\n      })\n      .addCase(fetchPizza.fulfilled, (state, action: PayloadAction<PizzaItem[]>) => {\n        state.items = action.payload\n        state.status = Status.SUCCESS\n      })\n      .addCase(fetchPizza.rejected, (state) => {\n        state.status = Status.ERROR\n        state.items = []\n      })\n  }\n})\n\nexport const selectPizzaData = (state: RootState) => state.pizza;\n\nexport const { setItems } = pizzaSlice.actions\n\nexport default pizzaSlice.reducer"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,EAAEC,WAAW,QAAuB,kBAAkB;AAC/E,SAASC,aAAa,QAAQ,iBAAiB;AAE/C,SAAoEC,MAAM,QAAQ,SAAS;AAE3F,OAAO,MAAMC,UAAU,GAAGJ,gBAAgB,CAA8B,wBAAwB,EAAE,OAAOK,MAAsB,EAAEC,QAAQ,KAAK;EAC5I,MAAM;IAAEC,IAAI;IAAEC,UAAU;IAAEC;EAA6B,CAAC,GAAGJ,MAAM;EACjE,MAAM;IAAEK;EAAK,CAAC,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAgB,iDAAiDF,WAAW,WAAWD,UAAU,GAAG,CAAC,GAAG,aAAaA,UAAU,EAAE,GAAG,EAAE,WAAWD,IAAI,CAACK,YAAY,EAAE,CAAC;EACrM,MAAMC,QAAQ,GAAGP,QAAQ,CAACO,QAAQ;EAClCA,QAAQ,CAACX,aAAa,CAACQ,IAAI,CAACI,IAAI,CAACC,WAAW,CAAC,CAAC;EAC9C,OAAOL,IAAI,CAACM,KAAK;AACnB,CAAC,CAAC;AAEF,MAAMC,YAA6B,GAAG;EACpCD,KAAK,EAAE,EAAE;EACTE,MAAM,EAAEf,MAAM,CAACgB;AACjB,CAAC;AAED,MAAMC,UAAU,GAAGnB,WAAW,CAAC;EAC7BoB,IAAI,EAAE,OAAO;EACbJ,YAAY;EACZK,QAAQ,EAAE;IACRC,QAAQA,CAACC,KAAK,EAAEC,MAAkC,EAAE;MAClDD,KAAK,CAACR,KAAK,GAAGS,MAAM,CAACC,OAAO;IAC9B;EACF,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACzB,UAAU,CAAC0B,OAAO,EAAGN,KAAK,IAAK;MACtCA,KAAK,CAACN,MAAM,GAAGf,MAAM,CAACgB,OAAO;MAC7BK,KAAK,CAACR,KAAK,GAAG,EAAE;IAClB,CAAC,CAAC,CACDa,OAAO,CAACzB,UAAU,CAAC2B,SAAS,EAAE,CAACP,KAAK,EAAEC,MAAkC,KAAK;MAC5ED,KAAK,CAACR,KAAK,GAAGS,MAAM,CAACC,OAAO;MAC5BF,KAAK,CAACN,MAAM,GAAGf,MAAM,CAAC6B,OAAO;IAC/B,CAAC,CAAC,CACDH,OAAO,CAACzB,UAAU,CAAC6B,QAAQ,EAAGT,KAAK,IAAK;MACvCA,KAAK,CAACN,MAAM,GAAGf,MAAM,CAAC+B,KAAK;MAC3BV,KAAK,CAACR,KAAK,GAAG,EAAE;IAClB,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAMmB,eAAe,GAAIX,KAAgB,IAAKA,KAAK,CAACY,KAAK;AAEhE,OAAO,MAAM;EAAEb;AAAS,CAAC,GAAGH,UAAU,CAACiB,OAAO;AAE9C,eAAejB,UAAU,CAACkB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}